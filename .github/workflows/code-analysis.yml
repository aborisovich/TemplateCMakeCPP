name: Microsoft C++ Code Analysis

on:
  pull_request:
    branches: [ "main" ]
  # Allow this workflow to be run from other workflows
  workflow_call:
  # Allows to run this workflow from Actions tab
  workflow_dispatch:

# Specifies group name that stops previous wokrflows if the name matches
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref }}

env:
  build_dir: ${{github.workspace}}\build\x64-debug-windows

permissions:
  contents: read

jobs:
  analyze:
    permissions:
      contents: read            # for actions/checkout to fetch code
      security-events: write    # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read             # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Analyze
    runs-on: windows-latest

    steps:
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.12.0
        with:
          arch: amd64

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake --preset x64-debug-windows

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@v0.1.1
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build_dir }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths: ${{ github.workspace }}\external;${{ github.workspace }}\tests;${{ env.build_dir }}\_deps

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      # Upload SARIF file as an Artifact to download and view
      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: sarif-file
          path: ${{ steps.run-analysis.outputs.sarif }}
